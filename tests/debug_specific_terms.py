#!/usr/bin/env python3
"""
Debug specific failing terms
"""

import re

spanish_text = """
La computaci√≥n en la nube ofrece infraestructura escalable para aplicaciones. La ciberseguridad 
protege los activos digitales. El internet de las cosas conecta dispositivos para generar datos.

La tecnolog√≠a blockchain proporciona libros contables seguros. La computaci√≥n cu√°ntica promete 
resolver problemas complejos. La visi√≥n por computadora permite a las m√°quinas interpretar informaci√≥n visual.

La computaci√≥n m√≥vil proporciona acceso ubicuo. El comercio electr√≥nico permite compras en l√≠nea.
La ingenier√≠a de software asegura el dise√±o sistem√°tico de sistemas robustos.
"""

# Test our regex pattern
terms_to_test = ['vision computadora', 'comercio electronico']

sentences = re.split(r'[.!?\n]+', spanish_text)
sentences = [s.strip().lower() for s in sentences if s.strip()]

print("üîç DEBUG DE T√âRMINOS ESPEC√çFICOS")
print("=" * 60)

for term in terms_to_test:
    print(f"\nüéØ T√©rmino: '{term}'")
    term_words = term.split()
    
    for i, sentence in enumerate(sentences):
        print(f"\n   üìÑ Oraci√≥n {i+1}: '{sentence}'")
        
        matches = 0
        for word in term_words:
            if len(word) > 3:
                # Test our regex patterns
                word_variants = [
                    word,
                    word.replace('a', '[a√°]').replace('e', '[e√©]').replace('i', '[i√≠]').replace('o', '[o√≥]').replace('u', '[u√∫]').replace('n', '[n√±]')
                ]
                
                found = False
                for variant in word_variants:
                    pattern = r'\b' + variant + r'\b'
                    if re.search(pattern, sentence):
                        print(f"      ‚úÖ '{word}' encontrado con patr√≥n '{pattern}'")
                        matches += 1
                        found = True
                        break
                
                if not found:
                    print(f"      ‚ùå '{word}' NO encontrado")
                    # Test what words ARE in the sentence
                    sentence_words = sentence.split()
                    similar_words = [w for w in sentence_words if word[:3] in w or w[:3] in word]
                    if similar_words:
                        print(f"         üîç Palabras similares: {similar_words}")
        
        print(f"      üìä Coincidencias: {matches}/{len(term_words)}")
        if matches >= len(term_words) - 1 or matches >= 2:
            print(f"      ‚úÖ T√âRMINO DEBER√çA SER ENCONTRADO")
        else:
            print(f"      ‚ùå T√©rmino no califica")
